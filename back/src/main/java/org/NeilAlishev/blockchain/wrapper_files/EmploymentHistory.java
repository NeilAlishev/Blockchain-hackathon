package org.NeilAlishev.blockchain.wrapper_files;

import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.generated.Int256;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Future;

/**
 * Auto generated code.<br>
 * <strong>Do not modify!</strong><br>
 * Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>, or {@link org.web3j.codegen.SolidityFunctionWrapperGenerator} to update.
 *
 * <p>Generated with web3j version 2.3.0.
 */
public final class EmploymentHistory extends Contract {
    private static final String BINARY = "6060604052341561000f57600080fd5b5b6108f08061001f6000396000f300606060405236156100755763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631d96f3fb811461007a5780633ec9e3b0146100e45780638c9cc9da1461014e578063a6d2ba1e14610179578063aa2237b7146101a1578063b52956cb146101ec575b600080fd5b341561008557600080fd5b61009060043561020a565b60405160208082528190810183818151815260200191508051906020019060200280838360005b838110156100d05780820151818401525b6020016100b7565b505050509050019250505060405180910390f35b34156100ef57600080fd5b61009060043561027c565b60405160208082528190810183818151815260200191508051906020019060200280838360005b838110156100d05780820151818401525b6020016100b7565b505050509050019250505060405180910390f35b341561015957600080fd5b610167600435602435610429565b60405190815260200160405180910390f35b341561018457600080fd5b61016760043561045b565b60405190815260200160405180910390f35b34156101ac57600080fd5b6101ba600435602435610527565b604051808481526020018381526020018260028111156101d657fe5b60ff168152602001935050505060405180910390f35b34156101f757600080fd5b61020860043560243560443561056d565b005b6102126107c4565b6001600083815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561026f57602002820191906000526020600020905b81548152602001906001019080831161025b575b505050505090505b919050565b6102846107c4565b61028c6107c4565b6102946107c4565b60008060008087815260200190815260200160002080548060200260200160405190810160405281815291906000602084015b82821015610333576000848152602081206003840201905b506060604051908101604090815282548252600183015460208301526002808401549293929184019160ff169081111561031557fe5b600281111561032057fe5b81525050815260200190600101906102c7565b505050509350835160030260405180591061034b5750595b908082528060200260200182016040525b509250600091505b835182101561041c57506003810283828151811061037e57fe5b906020019060200201515183828151811061039557fe5b602090810290910101528382815181106103ab57fe5b90602001906020020151602001518382600101815181106103c857fe5b602090810290910101528382815181106103de57fe5b906020019060200201516040015160028111156103f757fe5b83826002018151811061040657fe5b602090810290910101525b600190910190610364565b8294505b50505050919050565b60016020528160005260406000208181548110151561044457fe5b906000526020600020900160005b91509150505481565b60006104656107e8565b6000838152602081905260409020541515610484576000199150610520565b6000838152602081905260409020805460001981019081106104a257fe5b906000526020600020906003020160005b506060604051908101604090815282548252600183015460208301526002808401549293929184019160ff16908111156104e957fe5b60028111156104f457fe5b905250905060005b8160400151600281111561050c57fe5b1461051b576000199150610520565b805191505b5b50919050565b60006020528160005260406000208181548110151561054257fe5b906000526020600020906003020160005b508054600182015460029092015490935090915060ff1683565b6105756107e8565b60008060025b84111561058757600080fd5b60008681526020819052604090205415156105af5760005b84146105aa57600080fd5b61067b565b6000868152602081905260409020805460001981019081106105cd57fe5b906000526020600020906003020160005b506060604051908101604090815282548252600183015460208301526002808401549293929184019160ff169081111561061457fe5b600281111561061f57fe5b905250925060005b8414156106505760005b8360400151600281111561064157fe5b116105aa57600080fd5b61067b565b60005b8360400151600281111561066357fe5b1480156106705750848351145b151561067b57600080fd5b5b5b600086815260208190526040902080546001810161069b8382610814565b916000526020600020906003020160005b6060604051908101604052808981526020014281526020018860028111156106d057fe5b60028111156106db57fe5b9052919050815181556020820151816001015560408201518160020160006101000a81548160ff0219169083600281111561071257fe5b021790555050506000868152600160205260408120935090505b84141561075d5781548290600181016107458382610846565b916000526020600020900160005b50879055506107ba565b5060005b81548110156107ba5785828281548110151561077957fe5b906000526020600020900160005b505414156107b157818181548110151561079d57fe5b906000526020600020900160005b50600090555b5b600101610761565b5b5b505050505050565b60206040519081016040526000815290565b60206040519081016040526000815290565b60606040519081016040528060008152602001600081526020016000600281111561080f57fe5b905290565b815481835581811511610840576003028160030283600052602060002091820191016108409190610870565b5b505050565b815481835581811511610840576000838152602090206108409181019083016108a3565b5b505050565b6108a091905b8082111561089c576000808255600182015560028101805460ff19169055600301610876565b5090565b90565b6108a091905b8082111561089c57600081556001016108a9565b5090565b905600a165627a7a7230582026b49bb59087a1c64b06bffb4bb9892c47837400e77b8134a6527f542d091c280029";

    private EmploymentHistory(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    private EmploymentHistory(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public Future<DynamicArray<Uint256>> getOrganisationEmployees(Uint256 organizationId) {
        Function function = new Function("getOrganisationEmployees", 
                Arrays.<Type>asList(organizationId), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Uint256>>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<DynamicArray<Uint256>> getEmploymentHistory(Uint256 personId) {
        Function function = new Function("getEmploymentHistory", 
                Arrays.<Type>asList(personId), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Uint256>>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<Uint256> employeesOf(Uint256 param0, Uint256 param1) {
        Function function = new Function("employeesOf", 
                Arrays.<Type>asList(param0, param1), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<Int256> getCurrentEmployment(Uint256 personId) {
        Function function = new Function("getCurrentEmployment", 
                Arrays.<Type>asList(personId), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<List<Type>> empRecordOf(Uint256 param0, Uint256 param1) {
        Function function = new Function("empRecordOf", 
                Arrays.<Type>asList(param0, param1), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint8>() {}));
        return executeCallMultipleValueReturnAsync(function);
    }

    public Future<TransactionReceipt> addEmpRecord(Uint256 personId, Uint256 organizationId, Uint256 status) {
        Function function = new Function("addEmpRecord", Arrays.<Type>asList(personId, organizationId, status), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public static Future<EmploymentHistory> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, BigInteger initialWeiValue) {
        return deployAsync(EmploymentHistory.class, web3j, credentials, gasPrice, gasLimit, BINARY, "", initialWeiValue);
    }

    public static Future<EmploymentHistory> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, BigInteger initialWeiValue) {
        return deployAsync(EmploymentHistory.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "", initialWeiValue);
    }

    public static EmploymentHistory load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new EmploymentHistory(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    public static EmploymentHistory load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new EmploymentHistory(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }
}
